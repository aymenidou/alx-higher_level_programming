The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Import add_integer from module
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test matrix= List of Lists of integers / div= integer
    >>> matrix = [[0, 0, 0],[0, 0, 0]]
    >>> print(matrix_divided(matrix, 3))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test matrix= List of Lists of integers / div= string
    >>> print(matrix_divided(matrix, "3"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test matrix= List of Lists of integers / div= 0
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test matrix= not a list of lists of integers / div= integer
    >>> print(matrix_divided([["h","e","l","l","o"]], 1))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix= list of lists of integers but not rectangular / div= integer
    >>> print(matrix_divided([[1, 2, 3], [1]], 1))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test matrix= list of lists of integers / div= float(inf)
    >>> print(matrix_divided([[1, 2, 3]], float('inf')))
    [[0.0, 0.0, 0.0]]

Test missing one argument
    >>> print(matrix_divided([[1, 2, 3]]))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test missing 2 arguments
    >>> print(matrix_divided())
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
