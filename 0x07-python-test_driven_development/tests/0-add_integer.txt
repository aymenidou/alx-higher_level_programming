The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import add_integer from module
    >>> add_integer = __import__('0-add_integer').add_integer

Test 1 plus 2
    >>> add_integer(1, 2)
    3

test 1 plus -2
    >>> add_integer(1, -2)
    -1

test 1.4 plus 2
    >>> add_integer(1.4, 2)
    3

test 1 plus "2"
    >>> add_integer(1, "2")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

test "1" plus "2"
    >>> add_integer("1", "2")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

test "1"
    >>> add_integer("1")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

test missing one argument
    >>> add_integer(b="NaN")
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

test with None arguments
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

test with None arguments
    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

test with float overflow
    >>> add_integer(1, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
